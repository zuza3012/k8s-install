- name: Install cryptography python package for certificate
  become: true
  ansible.builtin.pip:
    name: cryptography

# - name: Generate an OpenSSL Certificate for user
#   become: true
#   community.crypto.x509_certificate_pipe:
#     provider: ownca
#     csr_content: "{{ hostvars[groups['connect'][0]].csr_result.csr }}"
#     ownca_path: /etc/kubernetes/pki/ca.crt
#     ownca_privatekey_path: /etc/kubernetes/pki/ca.key
#   register: crt_result
#   when: not hostvars[groups['connect'][0]].stat_result.stat.exists

# - name: Read ca.crt file for connect nodes
#   become: true
#   ansible.builtin.command: cat /etc/kubernetes/pki/ca.crt
#   changed_when: false
#   register: ca_file
#   when: inventory_hostname == groups['masters'][0]



- name: Make csr.yaml file
  ansible.builtin.template:
    src: csr.yaml.j2
    dest: "/home/{{ ansible_user }}/.kube/client.csr"
  when: hostvars[groups['connect'][0]].csr_result is defined ###  todo: better when

#tp be done
#k apply -f csr.yaml
#k certificate approve fancyname
# kubectl get csr fancyname --output=jsonpath="{.status}" | jq .
# get certificate and give it to client
- meta: end_play
