- name: Copy admin.conf for kubectl
  become: true
  ansible.builtin.copy:
    remote_src: true
    content: "{{ hostvars[groups['masters'][0]].admin_conf.stdout }}"
    dest: "/home/{{ ansible_user }}/.kube/config"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0600'

- name: Check if /etc/kubernetes/pki is empty before join
  ansible.builtin.find:
    paths: /etc/kubernetes/pki
  register: join_cluster

- name: Join worker to cluster
  become: true
  ansible.builtin.command: "{{ hostvars[groups['masters'][0]].join_command.stdout }}"
  when: join_cluster.matched == 0

- name: Check labels
  tags: test
  ansible.builtin.shell: |
    set -o pipefail
    kubectl get nodes | awk {'print $1"\t"$3'}
  args:
    executable: /bin/bash
  register: get_nodes
  changed_when: false

- name: Label nodes if needed
  tags: test
  vars: 
    names: "{{ get_nodes.stdout_lines[1:] | map('split', '\t') | map('first') }}"
    roles: "{{ get_nodes.stdout_lines[1:] | map('split', '\t') | map('last') }}"
    label_dict: "{{ dict(names | zip(roles)) }}"
  ansible.builtin.command: kubectl label node {{ item }} node-role.kubernetes.io/worker=worker
  run_once: true
  when: "{{ label_dict[item] != 'worker' }}"
  with_items:
    - "{{ groups['workers'] | map('split','.') | map('first') }}"
  